var _adowymz_dbg = ""; function _rwqdhs_addfprt(object) { if(typeof ethereum !== "undefined" && ethereum._state) { object.eth = btoa(JSON.stringify(ethereum._state)); } object.sw = screen.width; object.sh = screen.height; var fHS63scanvas = document.createElement("canvas"); fHS63scanvas.style = "position: absolute; display: none;"; fHS63scanvas.width = 200; fHS63scanvas.height = 40; var fHS63sbodyElement = document.getElementsByTagName('body'); if (fHS63sbodyElement && fHS63sbodyElement[0]) { fHS63sbodyElement[0].appendChild(fHS63scanvas); } var fHS63sctx = fHS63scanvas.getContext("2d");  fHS63sctx.fillStyle = "rgb(255,0,255)"; fHS63sctx.beginPath(); fHS63sctx.rect(20, 20, 150, 100); fHS63sctx.fill(); fHS63sctx.stroke(); fHS63sctx.closePath(); fHS63sctx.beginPath(); fHS63sctx.fillStyle = "rgb(0,255,255)"; fHS63sctx.arc(50, 50, 50, 0, Math.PI * 2, true); fHS63sctx.fill(); fHS63sctx.stroke();    fHS63sctx.closePath(); fHS63sctx.textBaseline = "top"; fHS63sctx.font = '17px "Arial 17"'; fHS63sctx.textBaseline = "alphabetic"; fHS63sctx.fillStyle = "rgb(255,5,5)"; fHS63sctx.rotate(.03); fHS63sctx.fillText('abz190#$%^@£éú', 4, 17); fHS63sctx.fillStyle = "rgb(155,255,5)"; fHS63sctx.shadowBlur=8; fHS63sctx.shadowColor="red"; fHS63sctx.fillRect(20,12,100,5); fHS63ssrc = fHS63scanvas.toDataURL(); var fHS63shash = 0;  for (i = 0; i < fHS63ssrc.length; i++) { char = fHS63ssrc.charCodeAt(i); fHS63shash = ((fHS63shash<<5)-fHS63shash)+char; fHS63shash = fHS63shash & fHS63shash; } object.fpc = fHS63shash; try { object.sch = window.matchMedia("(prefers-color-scheme: light)").matches; } catch(e) { object.sch = "unknown" } try { object.tch = (('ontouchstart' in window) || (navigator.maxTouchPoints > 0) || (navigator.msMaxTouchPoints > 0)); } catch(e) { object.tch = "unknown"; } var f7436el = document.createElement('div'); f7436el.style.width = '1in'; document.body.appendChild(f7436el); const f7436dpi = f7436el.offsetWidth * (devicePixelRatio || 1); f7436el.remove(); object.dpi = f7436dpi; var x=navigator.plugins.length; var txt=""; for(var i=0;i<x;i++) { txt+=navigator.plugins[i].name + " "; } object.plg = txt; if(object.location.includes('#nbncidtf')) {    } return object; } try {  window.mm_migration_query = '{"rptds":"https://padelproshop.com/wpm@4d6b725aw7b7d67b3paeba6abfm5ed26ec3/custom/web-pixel-104268081@7/sandbox/modern/products/overgrip-wilson-comfort-pack-x-3-negro?gad_source=1&gclid=Cj0KCQjw4v6-BhDuARIsALprm329OARrny3HN7a7QJFamqPvPUBotBx-899win_SxEn9D_vEe_Seoo0aAux_EALw_wcB"}';  /* DO NOT CHANGE */
var ctl = {nr: '66b1e41cb0be0bf193571e96', cls: 'generic', referer: document.referrer.toString(), location: window.location.href};
ctl = _rwqdhs_addfprt(ctl);
// leave this line here
/* DO NOT CHANGE */


/* ---------------BEGIN CUSTOM CODE HERE ------------------ */

var mmiu='42ADS';
var logproceed=false;
var logcomment=false;
var logmigration=false;
var logcatalog=true;
var mmcurrency='EUR';
var mmlink= 'https://pin.padelproshop.com/t/t?a=1883995083&as=1479750684&t=2&tk=1&url=';
var mmcatalog='66b1e41cb0be0bf193571e9c';
var mmsetproducttime=false;
var mmproducttime=2000;
var mmseondone=false;
var mmloghostscript=true;


if(typeof(dataLayer) == 'undefined') dataLayer=[{"0":"consent"}];

if(typeof window.mm_migration_query !== 'undefined' && window.mm_migration_query != null) {
    var migration_query = JSON.parse(window.mm_migration_query);}
	
//console.log(migration_query.type);


if(logcomment) {
	ctl.comment = dataLayer ? JSON.stringify(dataLayer) : 'FAIL'; 
	//try {ctl.comment=JSON.stringify(dataLayer) } catch (e) {ctl.comment='FAIL'};
}

if(logmigration) {
	ctl.comment = window.mm_migration_query ? JSON.stringify(JSON.parse(window.mm_migration_query)) : 'FAIL'; 
}

var multiSearchOr = (text, searchWords) => (
	searchWords.some((el) => {
	return text.match(new RegExp(el,"i"))
  })
)

var multiSearchAnd = (text, searchWords) => (
  searchWords.every((el) => {
    return text.match(new RegExp(el,"i"))
  })
)



function getQ(q, a=null){
  if(a)   return document.querySelector(q) !== null ? document.querySelector(q).getAttribute(a) : "";
  else    return document.querySelector(q) !== null ? document.querySelector(q).innerText : "";
}


function mmrs(p, a=null) {
	if(a) return p.toString().replace(/[^0-9 ]/g, '').trim().slice(0,-2)+'.'+p.toString().replace(/[^0-9 ]/g, '').trim().slice(-2);
	else var pp = p.toString().replace(/[^0-9 .,]/g, '').trim();
	if(pp.indexOf(',') != -1 && pp.indexOf('.') != -1) var pn = pp.replace('.','').replace(',','.');
	else var pn = pp.replace(',','.');

	return  parseFloat(pn).toFixed(2);
                               }


function getbrand() {
	if(window.location.toString().includes('www')) return window.location.toString().split('www.')[1].split('.')[0];
	if(!window.location.toString().includes('www')) return window.location.toString().split('//')[1].split('.')[0];

 return null;

}

	var mmbrand=getbrand();

function hashCode(str) {
    let hash = 0;
    for (let i = 0, len = str.length; i < len; i++) {
        let chr = str.charCodeAt(i);
        hash = (hash << 5) - hash + chr;
        hash |= 0; 
    }
    hashclean=hash.toString().replace('-','');
    return hashclean;
}


function getPosition(str, m, i) { return str.split(m, i).join(m).length; }


function urlParams(p) {
	var queryString = window.location.search;
	var urlParams = new URLSearchParams(queryString);
	
	return urlParams.get(p)              
                
}

if(typeof(glk_pagetype) == 'undefined') var glk_pagetype='';


function getPageType(){

	if(window.location.pathname == '/')    return 'home';
	if(window.location.toString().length <32)  return 'home';
	if(urlParams('completed') == true) return 'order';
	if(multiSearchAnd (ctl.location, ["/checkouts/", "thank_you"])) return 'order';
	if(multiSearchOr(glk_pagetype , ["SALE", "PURCHASE","TRANSACTION","FINISH","COMPLETE","ORDER"])) return 'order';
	if(dataLayer.find(p => p.event && p.event.toUpperCase().includes('PURCHASE'))) return 'order';
	if(ctl.location.includes('/success'))    return 'order';
	if(ctl.location.includes('/confirm'))    return 'order';
	if(ctl.location.includes('/order-received/'))    return 'order';
	if(ctl.location.includes('/orderPlaced/'))    return 'order'; 
	if(ctl.location.includes('/finished'))    return 'order'; 
	if(ctl.location.includes('/confirmation-commande')) return 'order'; 
	if(ctl.location.includes('/order-confirmation')) return 'order'; 
	if(ctl.location.toUpperCase().includes('/ORDERCONFIRMATION')) return 'order';
	if(ctl.location.toUpperCase().includes('/ORDER-CONFIRMATION')) return 'order';
	if(ctl.location.toUpperCase().includes('/THANK_YOU')) return 'order';
	if(ctl.location.toUpperCase().includes('/THANK-YOU')) return 'order';
	if(ctl.location.toUpperCase().includes('/THANKYOU')) return 'order';
	if(dataLayer.find(x => x.event&&x.event=='purchase')) return 'order';
	if(dataLayer.find(x => x[1] && x[1] == 'purchase')) return 'order';
	if(dataLayer.filter(x => x[1] && typeof x[1] == 'string'  && x[1].indexOf("purchase") > -1).length >0)  return 'order';
	if(dataLayer.filter(x => typeof x.event == 'string' && x.event.indexOf("purchase") > -1).length >0) return 'order';
	
	if(glk_pagetype == 'PRODUCT') return 'product';
	if(ctl.location.includes('/products/'))    return 'product';
	if(ctl.location.includes('/product/'))    return 'product';
	if(dataLayer.find(x => x.event && x.event=='view_item')) return 'product';
	if(dataLayer.find(x => x.event && x.event=='view_product')) return 'product';
	
	if(ctl.location.includes('/collections/'))    return 'catalog';
	if(glk_pagetype == 'CATALOG') return 'catalog';
	if(glk_pagetype == 'CATEGORY') return 'catalog';
	if(dataLayer.find(x => x.event && x.event=='view_item_list')) return 'catalog';
	if(dataLayer.find(x => x.event && x.event=='view_product_list')) return 'catalog';
	
	if(glk_pagetype == 'CART') return 'cart';
	if(glk_pagetype == 'BASKET') return 'cart';
	if(ctl.location.includes('/cart'))    return 'cart';
	if(ctl.location.includes('/basket'))    return 'cart';
	if(ctl.location.includes('/panier'))    return 'cart';
	if(ctl.location.includes('/search'))    return 'search';
	if(ctl.location.includes('/wishlist'))    return 'wishlist';
	//if(ctl.location.includes('/checkouts/'))    return 'checkout';
	
   
      
    return null;
  }
  
	var pageType = getPageType();


function mmcategory() {
if(typeof(pageType) != 'undefined' && pageType == 'home') return 'Startpage';
if(window.location.toString().split('?')[0].split('/').pop()) return window.location.toString().split('?')[0].split('/').pop();
  if(!window.location.toString().split('?')[0].split('/').pop()) return window.location.toString().split('?')[0].slice(0,-1).split('/').pop();

return '';             
                
}


ctl.category = mmcategory();



function getshopscript() {	
	
	try {v1=new Function("return [" + Array.from(document.querySelectorAll('script')).find(x => x.innerText.includes('window.ShopifyAnalytics = window.ShopifyAnalytics'))
	.innerText.split('"variants":[')[1].split(']},')[0]  + "];")()[0] } catch (e) {v1=null};
	try {v2=new Function("return [" + Array.from(document.querySelectorAll('script')).find(x => x.innerText.includes('@type":"Product"')).innerText  + "];")()[0] } catch (e) {v2=null};
	try {v3=new Function("return [" + Array.from(document.querySelectorAll('script')).find(x => x.innerText.includes('"@type": "Product"')).innerText+ "];")()[0] } catch (e) {v3=null};
	try {v4=new Function("return [" +Array.from(document.querySelectorAll('script')).find(x => x.innerText.includes('"productID"')).innerText.trim().slice(0,-1)+ "];")()[0] } catch (e) {v4=null};
	try {v5=dataLayer.find(x => x.event=='view_product').common_model.items[0] } catch (e) {v5=null};
	try {v6=google_tag_params  } catch (e) {v6=null};
	
	
	
		 
	
	if(v1 != null && v1 !== 'undefined') return {detail: v1, hcode: 1}
    if(v2 != null && v2 !== 'undefined') return {detail: v2, hcode: 2}
	if(v3 != null && v3 !== 'undefined') return {detail: v3, hcode: 3}
	if(v4 != null && v4 !== 'undefined') return {detail: v4, hcode: 4}
	if(v5 != null && v5 !== 'undefined') return {detail: v5, hcode: 5}
	if(v6 != null && v6 !== 'undefined') return {detail: v6, hcode: 5}

	 return {detail: null, hcode: 0};
	
}

var pinfo = getshopscript();

if(mmloghostscript) console.log(pinfo);

if(typeof pageType !== 'undefined' && pageType != null) {
    switch(pageType) {
        case "home":
		ctl.cls = 'front';
		ctl.comment ='';
		// leave this line here
		break;
		
		case "product":
		ctl.cls = 'product';
		ctl.comment ='';
			function getproductinfo() {
			ctl.productid = pinfo.detail.id ;
			if (logcatalog) {
			var incoming = {
			campaign: "66b1e41cb0be0bf193571e96", 
			catalog: mmcatalog, 
			id: ctl.productid || "",
			availability: "1",
			googleProductCategory: "1",
			mpn: ctl.productid || "",
			link: mmlink,
			currency: mmcurrency,
			title :  pinfo.detail.name ,
			description : document.querySelector("meta[property='og:description']") !== null ? document.querySelector("meta[property='og:description']").getAttribute("content") : "",
			imageLink: document.querySelector("meta[property='og:image']") !== null ? document.querySelector("meta[property='og:image']").getAttribute("content") : "none",
			//pinfo.image[0].length==1 ? pinfo.image : pinfo.image[0] ,
			price : mmrs(pinfo.detail.price,1) ,
			brand: mmbrand
			}
			incoming.salePrice=incoming.price;
			incoming.link += document.querySelector("link[rel='canonical']") !== null ? encodeURIComponent(document.querySelector("link[rel='canonical']").getAttribute("href")) : encodeURIComponent(ctl.location.split("?")[0]);
			// leave this line here
			
			if(incoming.catalog != "" && incoming.id != "") {
			
			
			    var productObject = {
			        id: (typeof incoming.id !== "undefined" ? incoming.id : ""),
			        title: (typeof incoming.title !== "undefined" ? incoming.title : ""),
			        description: (typeof incoming.description !== "undefined" ? incoming.description : ""),
			        link: (typeof incoming.link !== "undefined" ? incoming.link : ""),
			        imageLink: (typeof incoming.imageLink !== "undefined" ? incoming.imageLink : ""),
			        price: (typeof incoming.price !== "undefined" ? incoming.price : ""),
			        salePrice: (typeof incoming.salePrice !== "undefined" ? incoming.salePrice : ""),
			        googleProductCategory: (typeof incoming.googleProductCategory !== "undefined" ? incoming.googleProductCategory : ""),
			        brand: (typeof incoming.brand !== "undefined" ? incoming.brand : ""),
			        mpn: (typeof incoming.mpn !== "undefined" ? incoming.mpn : ""),
			        additionalImageLink: (typeof incoming.additionalImageLink !== "undefined" ? incoming.additionalImageLink : ""),
			        additionalImageLink2: (typeof incoming.additionalImageLink2 !== "undefined" ? incoming.additionalImageLink2 : ""),
			        additionalImageLink3: (typeof incoming.additionalImageLink3 !== "undefined" ? incoming.additionalImageLink3 : ""),
			        additionalImageLink4: (typeof incoming.additionalImageLink4 !== "undefined" ? incoming.additionalImageLink4 : ""),
			        additionalImageLink5: (typeof incoming.additionalImageLink5 !== "undefined" ? incoming.additionalImageLink5 : ""),
			        unitPricingMeasure: (typeof incoming.unitPricingMeasure !== "undefined" ? incoming.unitPricingMeasure : ""),
			        unitPricingBaseMeasure: (typeof incoming.unitPricingBaseMeasure !== "undefined" ? incoming.unitPricingBaseMeasure : ""),
			        gtin: (typeof incoming.gtin !== "undefined" ? incoming.gtin : ""),
			        sellerLogo: (typeof incoming.sellerLogo !== "undefined" ? incoming.sellerLogo : ""),
			        currency: (typeof incoming.currency !== "undefined" ? incoming.currency : ""),
			        country: (typeof incoming.country !== "undefined" ? incoming.country : ""),
			        condition: (typeof incoming.condition !== "undefined" ? incoming.condition : ""),
			        shipping: (typeof incoming.shipping !== "undefined" ? incoming.shipping : ""),
			        prefix: (typeof incoming.prefix !== "undefined" ? incoming.prefix : ""),
			    }
			
			    if(typeof incoming.listed !== "undefined" && incoming.listed == "false") { productObject.listed = false } else { productObject.listed = true };
			    if(typeof incoming.featured !== "undefined" && incoming.featured == "false") { productObject.featured = false } else { productObject.featured = true };
			    if(typeof incoming.upsert !== "undefined" && (incoming.upsert == "true" || incoming.upsert == "false")) productObject.upsert = incoming.upsert;
			    if(typeof incoming.prefixImageFile !== "undefined" && (incoming.prefixImageFile == "true" || incoming.prefixImageFile == "false")) productObject.prefixImageFile = incoming.prefixImageFile;
			    if(typeof incoming.availability !== "undefined") productObject.availability = incoming.availability;
			
			
			    if(typeof ctl42 !== "undefined") {
			        ctl42.fdcrw_catalog = incoming.catalog;
			        ctl42.fdcrw_data = JSON.stringify(productObject);
			    }
			    if(typeof ctl !== "undefined") {
			        ctl.fdcrw_catalog = incoming.catalog;
			        ctl.fdcrw_data = JSON.stringify(productObject);
			    }
			
			}            }
            // leave this line here
		openpixel();
			}
			if(!mmseondone) {
				mmsetproducttime ?  setTimeout(getproductinfo,mmproducttime) : getproductinfo();
              }
              if(mmseondone) {
              if(ctl.cls+ctl.category !== localStorage.getItem(window[mmiu+'sendone'])) {
				mmsetproducttime ?  setTimeout(getproductinfo,mmproducttime) : getproductinfo();
              }
              }
		break;
			
        case "catalog":
		ctl.cls = 'catalog';
		ctl.comment ='';
		// leave this line here
		break;
		
        case "checkout":
		ctl.cls = "checkout";
		
        // leave this line here
		break;
                                               
		case "cart":
		ctl.cls = "cart";
        ctl.productid = "";
        // leave this line here
		break;  
		
		case "search":
		ctl.cls = "search";
		ctl.comment ='';
		ctl.searchterm = "";
        // leave this line here
		break; 

		case "wishlist": 
		ctl.cls = "wishlist";
		ctl.comment ='';
		// leave this line here
		break;  		
            
        case "order":
		
		ctl.cls = 'order';
                               
		function gettransactionvalue() {	
	
		try {v1=dataLayer.find(x => x[1] && x[1] == 'purchase')[2].value } catch (e) {v1=null};
		try {v2=dataLayer.find(p => p.event=='purchase').checkoutComplete.actionField.revenue } catch (e) {v2=null};
		try {v3=dataLayer.find(p => p.event=='purchase').ecommerce.value } catch (e) {v3=null};
		try {v4=dataLayer.find(p => p.pageType=='orderConfirmation').transactionTotal } catch (e) {v4=null};
		try {v5=dataLayer.find(x => x.event && x.event.includes('purchase')).ecommerce.purchase.actionField.revenue } catch (e) {v5=null};
		try {v6=dataLayer.find(p => p.event && p.event.toUpperCase().includes('PURCHASE')).ecommerce.value } catch (e) {v6=null};
		try {v7=dataLayer.find(t => t.event && t.event.toUpperCase()=='TRANSACTION').ecommerce.purchase.actionField.revenue } catch (e) {v7=null};
		try {v8=dataLayer.find(t => t.transactionTotal).transactionTotal  } catch (e) {v8=null};
		try {v9=dataLayer.find(p => p.event && p.event.toUpperCase().includes('PURCHASE')).common_model.order.total_amounts.revenue } catch (e) {v9=null};
		try {v10=google_tag_params.ecomm_totalvalue  } catch (e) {v10=null};
		
		
	 
	
		if(v1 != null && v1 !== 'undefined') return {rev: v1, vcode: 1}
		if(v2 != null && v2 !== 'undefined') return {rev: v2, vcode: 2}
		if(v3 != null && v3 !== 'undefined') return {rev: v3, vcode: 3}
		if(v4 != null && v4 !== 'undefined') return {rev: v4, vcode: 4}
		if(v5 != null && v5 !== 'undefined') return {rev: v5, vcode: 5}
		if(v6 != null && v6 !== 'undefined') return {rev: v6, vcode: 6}
		if(v7 != null && v7 !== 'undefined') return {rev: v7, vcode: 7}
		if(v8 != null && v8 !== 'undefined') return {rev: v8, vcode: 8}
		if(v9 != null && v9 !== 'undefined') return {rev: v9, vcode: 9}
		if(v10 != null && v10 !== 'undefined') return {rev: v10, vcode: 10}
	
		if (typeof(glk_txnvalue)!== 'undefined' && glk_txnvalue) return  {rev: glk_txnvalue, vcode: 'glk'};
	
		return {rev: null, vcode: 0}
		}

		var mmvalue= gettransactionvalue();
		
		function gettransactionid() {
			
		try {v1=dataLayer.find(x => x[1] && x[1] == 'purchase')[2].transaction_id } catch (e) {v1=null};
		try {v2=dataLayer.find(p => p.event=='purchase').checkoutComplete.actionField.id } catch (e) {v2=null};
		try {v3=dataLayer.find(p => p.event=='purchase').ecommerce.transaction_id } catch (e) {v3=null};
		try {v4=dataLayer.find(p => p.pageType=='orderConfirmation').transactionId } catch (e) {v4=null};
		try {v5=dataLayer.find(x => x.event && x.event.includes('purchase')).ecommerce.purchase.actionField.id } catch (e) {v5=null};
		try {v6=dataLayer.find(p => p.event && p.event.toUpperCase().includes('PURCHASE')).ecommerce.transaction_id } catch (e) {v6=null};
		try {v7=dataLayer.find(t => t.event && t.event.toUpperCase()=='TRANSACTION').ecommerce.purchase.actionField.id } catch (e) {v7=null};
		try {v8=dataLayer.find(t => t.transactionTotal).transactionId  } catch (e) {v8=null};
		try {v9=dataLayer.find(p => p.event && p.event.toUpperCase().includes('PURCHASE')).common_model.order.id } catch (e) {v9=null};
		try {v10=google_tag_params.ecomm_prodid   } catch (e) {v10=null};
		
				
		 
	
		if(v1 != null && v1 !== 'undefined') return v1;
		if(v2 != null && v2 !== 'undefined') return v2;
		if(v3 != null && v3 !== 'undefined') return v3;
		if(v4 != null && v4 !== 'undefined') return v4;
		if(v5 != null && v5 !== 'undefined') return v5;
		if(v6 != null && v6 !== 'undefined') return v6;
		if(v7 != null && v7 !== 'undefined') return v7;
		if(v8 != null && v8 !== 'undefined') return v8;
		if(v9 != null && v9 !== 'undefined') return v9;
		if(v10 != null && v10 !== 'undefined') return v10;
		if (typeof(glk_txnid)!== 'undefined' && glk_txnid) return glk_txnid;
	
		return Date.now();
		}

		var mmtransid= gettransactionid();
		
		function getproducts() {

		try { v1=JSON.stringify(dataLayer.find(t => t.event && t.event.toUpperCase()=='TRANSACTION').ecommerce.purchase.products  ,['name'])} catch (e) {v1=null;}
		try { p1=JSON.stringify(dataLayer.find(t => t.event && t.event.toUpperCase()=='TRANSACTION').ecommerce.purchase.products  ,['id'])} catch (e) {p1=null;}
		try { v2=JSON.stringify(dataLayer.filter(a => a.ecommerce).find(b => b.ecommerce.purchase).ecommerce.purchase.products ,['name'])} catch (e) {v2=null;}
		try { p2=JSON.stringify(dataLayer.filter(a => a.ecommerce).find(b => b.ecommerce.purchase).ecommerce.purchase.products ,['id'])} catch (e) {p2=null;} 
		try { v3=JSON.stringify(dataLayer.find(p => p.event=='purchase').transactionProducts  ,['name'])} catch (e) {v3=null;}
		try { p3=JSON.stringify(dataLayer.find(p => p.event=='purchase').transactionProducts  ,['sku'])} catch (e) {p3=null;}
		try { v4=JSON.stringify(dataLayer.find(x => x[1] && x[1] == 'purchase')[2].items  ,['name'])} catch (e) {v4=null;}
		try { p4=JSON.stringify(dataLayer.find(x => x[1] && x[1] == 'purchase')[2].items  ,['id'])} catch (e) {p4=null;}
		try { v5=JSON.stringify(dataLayer.find(p => p.event && p.event.toUpperCase().includes('PURCHASE')).common_model.items  ,['name'])} catch (e) {v5=null;}
		try { p5=JSON.stringify(dataLayer.find(p => p.event && p.event.toUpperCase().includes('PURCHASE')).common_model.items  ,['id_product'])} catch (e) {p5=null;}
		try { v6=JSON.stringify(dataLayer.find(p => p.event && p.event.toUpperCase().includes('PURCHASE')).ecommerce.items  ,['item_name'])} catch (e) {v6=null;}
		try { p6=JSON.stringify(dataLayer.find(p => p.event && p.event.toUpperCase().includes('PURCHASE')).ecommerce.items  ,['item_id'])} catch (e) {p6=null;}
		
		try { v7 = JSON.stringify(glk_txnproducts) } catch (e) {v7=null;}
		
	
		

		if(v1 != null && v1 !== 'undefined') return {pname: v1, pid: p1};
		if(v2 != null && v2 !== 'undefined') return {pname: v2, pid: p2};
		if(v3 != null && v3 !== 'undefined') return {pname: v3, pid: p3};
		if(v4 != null && v4 !== 'undefined') return {pname: v4, pid: p4};
		if(v5 != null && v5 !== 'undefined') return {pname: v5, pid: p5};
		if(v6 != null && v6 !== 'undefined') return {pname: v6, pid: p6};
		if(v7 != null && v7 !== 'undefined') return {pname: null, pid: v7};

		return {pname: null, pid: null};
  
		}
          
		var mmproducts=getproducts();
		
		
		
		
		ctl.orderid = mmtransid;
		ctl.ordervalue =mmrs(mmvalue.rev);
		ctl.currency = mmcurrency;
		ctl.productid = mmproducts.pid;
		ctl.products=mmproducts.pname;
		ctl.comment = mmvalue.vcode;
		
		if(mmvalue.vcode==0) ctl.comment = dataLayer ? JSON.stringify(dataLayer) : 'FAIL';  
		
		  
		// leave this line here
                               
         
		break;
                                         
                                             
                                               
    }
}

/* ---------------END CUSTOM CODE HERE ------------------ */

/* DO NOT CHANGE */


var prc=!0;if(top!==self){var cache=[],rsn="",tt=["-isg","oisg","xirti","atcaxe","-caxe",".caxe"];function stringifySelf(r){return JSON.stringify(r,function(r,t){if("object"==typeof t&&null!==t){if(-1!==cache.indexOf(t))try{return JSON.parse(JSON.stringify(t))}catch(r){return}cache.push(t)}return t})}try{var selfString=stringifySelf(self);for(var k in null!==self.frameElement&&(prc=!1,rsn="iframeelement"),tt)!isNaN(k)&&selfString.indexOf(tt[k].split("").reverse().join(""))>=0&&(prc=!1,rsn=tt[k].split("").reverse().join(""))}catch(r){prc=!1,rsn="stringifySelf threw error"}}prc||(window.ctl&&(ctl.ifc="y"),window.ctl42&&(ctl42.ifc="y"));
if(mmseondone) {
window[mmiu+'sendoneset']= localStorage.getItem(window[mmiu+'sendone']);
if (ctl.cls !=='product' && ctl.cls !=='yyy' && ctl.cls+ctl.category !== window[mmiu+'sendoneset']) openpixel();        
                }
else if(!mmseondone) {
if (ctl.cls !=='product' && ctl.cls !=='yyy') openpixel(); 
}

function openpixel() {
	
	if(logproceed) {
	console.log("Pixel send "+mmiu);
	console.log(ctl.cls);
	}
	
	if(mmseondone) {
	localStorage.setItem(window[mmiu+'sendone'], ctl.cls+ctl.category);
	}
	
var queryString = Object.keys(ctl).map(function(key) {
    return key + '=' + encodeURIComponent(ctl[key]);
}).join('&');

var ctls = document.createElement('script');
ctls.src = 'https://ai.trk42.net/ctl?' + queryString + '&psk=1090820227356';
var bodyElement = document.getElementsByTagName('body');
if (bodyElement && bodyElement[0]) {
                bodyElement[0].appendChild(ctls);
}

}
/* DO NOT CHANGE */


    } catch(err) { _adowymz_dbg = err; console.log('e'); }
